/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "$rootDir/gradle/ballerinaStdLibBuild.gradle"

dependencies {
    implementation project(':ballerina-lang')
    implementation project(':ballerina-lang:jballerina.java')
    implementation project(':ballerina-lang:annotations')
    implementation project(':ballerina-runtime')
    implementation project(':metrics-extensions:ballerina-metrics-extension')
    implementation 'io.opentelemetry:opentelemetry-api'
    implementation 'io.opentelemetry:opentelemetry-sdk-trace'
    implementation 'io.opentelemetry:opentelemetry-sdk-testing'
    implementation 'com.google.code.gson:gson'

    testRuntime 'org.slf4j:slf4j-jdk14'

    testCompile project(path: ':ballerina-test-utils')
    testCompile project(':ballerina-cli')
    testCompile project(':ballerina-runtime')
    testCompile project(':ballerina-core')
    testCompile 'org.testng:testng'
    testCompile 'org.slf4j:slf4j-api'
    testCompile 'org.slf4j:slf4j-simple'
}

configurations {
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-simple'
    testCompile.exclude group: 'org.ops4j.pax.logging', module: 'pax-logging-api'
}

task updateVersion {
    doLast {
        ant.replaceregexp(
                file: "${project.buildDir}/ballerina-src/Ballerina.toml",
                match: "${project.name}-(.*).jar",
                replace: "${project.name}-${project.version}.jar"
        )
    }
}

copyBallerinaProject.finalizedBy(updateVersion)

ballerinaLangLibBuild {
    skipBootstrap = 'true'
}

description = 'Ballerina - Observability'

configurations.all {
    resolutionStrategy.preferProjectModules()
}
