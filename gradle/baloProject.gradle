import org.gradle.internal.os.OperatingSystem

apply from: "$rootDir/gradle/javaProjectWithExtBala.gradle"

configurations {
    bala { transitive false }
    balx { transitive false }
    oldBirJar { transitive false }
    oldBir { transitive false }
}

project.ext.moduleName = files(file('src/main/ballerina/src').listFiles()).filter { File f ->
    f.isDirectory() && f.name != 'target' && f.name != '.ballerina'
}.singleFile.name


def duplicateSrcPath = "$buildDir/duplicate-src"
def balaCreationPath = "$duplicateSrcPath/.ballerina/repo/ballerina"
def balxCreationPath = "$duplicateSrcPath/target"
def buildLog = file("$duplicateSrcPath/ballerina-internal.log")


// We duplicate source to avoid creating garbage in source dir
tasks.register('duplicateBalSouce', Copy) {
    from("src/main/ballerina/") {
        exclude '.ballerina/**', 'target/**', 'ballerina-internal.log'
    }
    into duplicateSrcPath

    outputs.cacheIf { false }
}

tasks.register('convertDuplicateSrcToProject') {
    dependsOn duplicateBalSouce

    def dotBalDir = duplicateSrcPath + "/.ballerina";
    doLast {
        mkdir dotBalDir
    }

    outputs.upToDateWhen {
        file(dotBalDir).exists()
    }
    outputs.cacheIf { false }
}

tasks.register('deleteBirJar', Delete) {
    delete "build/duplicate-src/target"
}

tasks.register('deleteBalBuildLog', Delete) {
    delete buildLog
}

tasks.register('copySelfToExternal', Copy) {
    dependsOn jar
    from "$buildDir/libs/"
    include "*.jar"
    into "$buildDir/externals"
    rename '.*', "${project.ext.moduleName}.jar"
}

tasks.register('copyBirJar', Copy) {
    from "$buildDir/duplicate-src/target/caches"
    into "$buildDir/generated-bir-jar"
    dependsOn createOldBirJar
    includeEmptyDirs = false
    eachFile {file ->
        file.path = file.path.replaceAll(/^.*\//, '').replaceAll(/ballerina-/, '').replaceAll(/-.jar/, '.jar')
    }
}

artifacts {
    bala file(balaCreationPath), { builtBy(createOldBirJar) }
    balx file(balxCreationPath), { builtBy(createOldBirJar) }
    oldBir file('build/generated-bir-jar/' + project.ext.moduleName + '.bir'), {builtBy(copyBirJar)}
    oldBirJar file('build/generated-bir-jar/' + project.ext.moduleName + '.jar'), {builtBy(copyBirJar)}
}

compileJava {
    dependsOn configurations.bala
    doFirst {
        configurations.bala.each {
            sourceSets.main.compileClasspath = fileTree(dir : new File(it, '/bre/lib/').path)
        }
    }
}

javadoc {
    enabled = false
}

spotbugsMain {
    enabled = false
}

test {
    dependsOn copySelfToTestBalHome
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}
