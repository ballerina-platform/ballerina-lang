/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"
apply plugin: 'jacoco'

apply from: "$rootDir/gradle/repositories.gradle"

ext.setProperty("grpcVersion", "1.27.2")
ext.setProperty("protobufVersion", "3.11.0")

dependencies {
    checkstyle project(':build-config:checkstyle')
    checkstyle 'com.puppycrawl.tools:checkstyle:8.18'

    implementation 'org.slf4j:slf4j-api:1.7.26'

    constraints {
        implementation 'commons-codec:commons-codec:1.14'
        implementation 'commons-io:commons-io:2.7'
        implementation 'commons-logging:commons-logging:1.1.1'
        implementation 'com.atlassian.commonmark:commonmark:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-gfm-tables:0.11.0'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.1'
        implementation 'com.h2database:h2:1.4.199'
        implementation 'org.hsqldb:hsqldb:2.2.7'
        implementation 'com.github.chewiebug:gcviewer:1.36'
        implementation "com.github.jknack:handlebars:4.0.6"
        implementation 'com.google.protobuf:protobuf-java:3.9.1'
        implementation 'com.google.code.findbugs:jsr305:3.0.2'
        implementation 'com.google.code.gson:gson:2.8.7'
        implementation 'com.google.guava:guava:23.0'
        implementation 'com.moandjiezana.toml:toml4j:0.7.2'
        implementation 'com.sun.mail:javax.mail:1.6.2'
        implementation 'com.squareup.okhttp3:okhttp:3.14.0'
        implementation 'com.squareup.okio:okio:2.2.2'
        implementation 'io.jaegertracing:jaeger-core:0.31.0'
        implementation 'io.jaegertracing:jaeger-thrift:0.31.0'
        implementation 'com.zaxxer:HikariCP:3.3.1'
        implementation "io.grpc:grpc-protobuf:${project.ext.grpcVersion}"
        implementation "io.grpc:grpc-stub:${project.ext.grpcVersion}"
        implementation "io.grpc:grpc-netty-shaded:${project.ext.grpcVersion}"
        implementation 'com.github.spullara.mustache.java:compiler:0.8.9'
        implementation 'org.bitbucket.cowwoc:diff-match-patch:1.2'

        implementation 'org.apache.commons:commons-lang3:3.8.1'
        implementation 'org.apache.commons:commons-text:1.9'
        implementation 'org.apache.geronimo.specs:geronimo-stax-api_1.0_spec:1.0.1'
        implementation 'org.apache.mina:mina-core:2.0.16'
        implementation 'org.apache.maven:maven-plugin-api:3.6.0'
        implementation 'org.apache.maven.plugin-tools:maven-plugin-annotations:3.6.0'
        implementation 'org.apache.ws.commons.axiom:axiom-api:1.2.22'
        implementation 'org.apache.ws.commons.axiom:axiom-impl:1.2.22'
        implementation 'org.apache.ws.commons.axiom:axiom-dom:1.2.22'
        implementation 'org.apache.ws.commons.axiom:axiom-c14n:1.2.22'
        implementation 'org.apache.zookeeper:zookeeper:3.6.1'
        implementation 'org.codehaus.woodstox:woodstox-core-asl:4.4.1'
        implementation 'org.codehaus.woodstox:stax2-api:4.2'
        implementation 'org.awaitility:awaitility:3.1.6'
        implementation 'org.bouncycastle:bcprov-jdk15on:1.61'
        implementation 'org.bouncycastle:bcpkix-jdk15on:1.61'
        implementation 'org.bytedeco.javacpp-presets:llvm-platform:6.0.1-1.4.2'
        implementation 'org.codehaus.plexus:plexus-utils:3.0.8'
        implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.12.0'
        implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:0.12.0'
        implementation 'org.hdrhistogram:HdrHistogram:2.1.11'
        implementation 'org.hsqldb:hsqldb:2.4.1'
        implementation 'org.javassist:javassist:3.24.1-GA'
        implementation 'org.jvnet.mimepull:mimepull:1.9.11'
        implementation 'org.mockito:mockito-all:1.10.19'
        implementation 'org.powermock:powermock-mockito-release-full:1.6.4'
        implementation 'org.powermock:powermock-module-testng-common:1.6.4'
        implementation 'org.powermock:powermock-mockito-release-full:1.6.4'
        implementation 'org.powermock:powermock-module-testng-common:1.6.4'
        implementation 'org.mvel:mvel2:2.4.4.Final'
        implementation 'org.ow2.asm:asm:7.1'
        implementation 'org.ow2.asm:asm-util:7.1'
        implementation 'org.ow2.asm:asm-tree:7.1'
        implementation 'org.scala-lang:scala-library:2.11.7'
        implementation 'org.slf4j:slf4j-simple:1.7.26'
        implementation 'org.slf4j:slf4j-jdk14:1.7.26'
        implementation 'org.testng:testng:6.14.3'
        implementation 'org.wso2.carbon.messaging:org.wso2.carbon.messaging:2.3.7'
        implementation 'org.yaml:snakeyaml:1.26'
        implementation 'org.wso2.transport.http:org.wso2.transport.http.netty:6.3.11'
        implementation 'org.wso2.transport.file:org.wso2.transport.local-file-system:6.0.55'
        implementation 'org.wso2.staxon:staxon-core:1.2.0.wso2v2'
        implementation 'org.quartz-scheduler:quartz:2.3.2'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.1'

        implementation 'info.picocli:picocli:4.0.1'
        implementation 'io.ballerina.messaging:broker-common:0.970.5'
        implementation 'io.ballerina.messaging:broker-core:0.970.5'
        implementation 'io.ballerina.messaging:broker-amqp:0.970.5'
        implementation 'io.dropwizard.metrics:metrics-core:4.1.7'
        implementation 'io.netty:netty-codec:4.1.39.Final'
        implementation 'io.netty:netty-buffer:4.1.39.Final'
        implementation 'io.netty:netty-common:4.1.39.Final'
        implementation 'io.netty:netty-codec-http:4.1.61.Final'
        implementation 'io.netty:netty-codec-http2:4.1.61.Final'
        implementation 'io.netty:netty-handler:4.1.46.Final'
        implementation 'io.netty:netty-tcnative-boringssl-static:2.0.25.Final'
        implementation 'io.netty:netty-transport:4.1.39.Final'
        implementation 'io.opentelemetry:opentelemetry-api:1.0.0'
        implementation 'io.opentelemetry:opentelemetry-sdk-trace:1.0.0'
        implementation 'io.opentelemetry:opentelemetry-sdk-testing:1.0.0'
        implementation 'io.swagger.core.v3:swagger-models:1.5.18'
        implementation 'io.swagger.parser.v3:swagger-parser:2.0.14'
        implementation 'io.swagger.parser.v3:swagger-parser-v2-converter:2.0.14'
        implementation 'me.tongfei:progressbar:0.7.4'
        implementation 'org.jline:jline:3.11.0'
        implementation 'jakarta.activation:jakarta.activation-api:1.2.2'
        implementation 'com.github.zafarkhaja:java-semver:0.9.0'

        implementation 'javax.transaction:javax.transaction-api:1.3'
        implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
        implementation 'junit:junit:4.8.2'
    }
}

sourceCompatibility = '1.11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

checkstyle {
    toolVersion '7.8.2'
    configFile rootProject.file("build-config/checkstyle/build/checkstyle.xml")
}

def excludePattern = '**/module-info.java'
tasks.withType(Checkstyle) {
    exclude excludePattern
}

spotbugsMain {
    it.effort "max"
    it.reportLevel "low"
    it.reports {
        xml.enabled false
        html.enabled true
    }
    def excludeFile = file('spotbugs-exclude.xml')
    if(excludeFile.exists()) {
        it.excludeFilter = excludeFile
    }
}

spotbugsTest {
    it.enabled = false
}

test {
    testLogging {
        // Make sure output from standard out or error is shown in Gradle output.
        showStackTraces = true
        showStandardStreams = true
    }
    systemProperty "ballerina.home", "$buildDir"
    systemProperty "org.apache.commons.logging.Log", "org.apache.commons.logging.impl.NoOpLog"
    systemProperty "LANG_REPO_BUILD", "true"
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

task createJavadoc(type: Javadoc) {
    source = sourceSets.main.java
    classpath = sourceSets.main.compileClasspath
    failOnError false //Temporary disabled to avoid build failure
    options.addStringOption('Xwerror', '-quiet')
}

check {
    dependsOn createJavadoc
}

task jacocoMergeExec(type: JacocoMerge) {
        destinationFile = file("$buildDir/jacoco/jacoco.exec")
        executionData = fileTree("$buildDir/jacoco/").matching {
            include "**.exec"
        } as FileCollection
}

publishing {
    publications {
        mavenJava {
            from components.java
        }
    }
}

test.finalizedBy(jacocoMergeExec)
//compileJava {
//    doFirst {
//        inputs.property("moduleName", moduleName)
//        options.compilerArgs = [
//                '--module-path', classpath.asPath,
//        ]
//        classpath = files()
//    }
//}
