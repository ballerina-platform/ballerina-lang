/*
 *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */
package {{packageName}};

{{#imports}}
import {{name}};
{{/imports}}

import java.util.Objects;

/**
 * A factory for creating nodes in the syntax tree.
 *
 * This is a generated class.
 *
 * @since 2.0.0
 */
public abstract class {{className}} extends {{superClassName}} {

    private {{className}}() {
    }
    {{#nodes}}
    {{^isAbstract}}

    public static {{externalClassName}} create{{externalClassName}}(
            {{^syntaxKind}}SyntaxKind kind, &#10;            {{/syntaxKind}}{{#fields}}{{#isList}}{{listClassName}}<{{fieldClassName}}>{{/isList}}{{^isList}}{{fieldClassName}}{{/isList}} {{fieldName}}{{^isLast}}, &#10;            {{/isLast}}{{/fields}}) {
        {{#fields}}
        {{^isOptional}}
        Objects.requireNonNull({{fieldName}}, "{{fieldName}} must not be null");
        {{/isOptional}}
        {{/fields}}

        STNode st{{externalClassName}} = STNodeFactory.create{{externalClassName}}(
                {{^syntaxKind}}kind, &#10;                {{/syntaxKind}}{{#fields}}{{#isList}}{{fieldName}}.underlyingListNode().internalNode(){{/isList}}{{^isList}}{{^isOptional}}{{fieldName}}.internalNode(){{/isOptional}}{{#isOptional}}getOptionalSTNode({{fieldName}}){{/isOptional}}{{/isList}}{{^isLast}}, &#10;                {{/isLast}}{{/fields}});
        return st{{externalClassName}}.createUnlinkedFacade();
    }
    {{/isAbstract}}
    {{/nodes}}
}

