{
  "position": {
    "line": 1,
    "character": 7
  },
  "source": "createVariableWithTuple1.bal",
  "expected": [
    {
      "title": "Create variable",
      "kind": "quickfix",
      "edits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 4
            },
            "end": {
              "line": 1,
              "character": 4
            }
          },
          "newText": "[int, string...]|error tuple \u003d "
        }
      ]
    },
    {
      "title": "Create variable and type guard",
      "kind": "quickfix",
      "edits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 15
            },
            "end": {
              "line": 1,
              "character": 15
            }
          },
          "newText": "\n    if tuple is [int, string...] {\n\n    }"
        },
        {
          "range": {
            "start": {
              "line": 1,
              "character": 4
            },
            "end": {
              "line": 1,
              "character": 4
            }
          },
          "newText": "[int, string...]|error tuple \u003d "
        }
      ]
    },
    {
      "title": "Create variable and check error",
      "kind": "quickfix",
      "edits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 4
            },
            "end": {
              "line": 1,
              "character": 4
            }
          },
          "newText": "[int, string...] tuple \u003d "
        },
        {
          "range": {
            "start": {
              "line": 1,
              "character": 4
            },
            "end": {
              "line": 1,
              "character": 4
            }
          },
          "newText": "check "
        },
        {
          "range": {
            "start": {
              "line": 0,
              "character": 22
            },
            "end": {
              "line": 0,
              "character": 22
            }
          },
          "newText": " returns error?"
        }
      ]
    }
  ]
}
