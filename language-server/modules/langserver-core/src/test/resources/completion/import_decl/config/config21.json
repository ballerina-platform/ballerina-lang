{
  "position": {
    "line": 5,
    "character": 5
  },
  "source": "import_decl/source/lsproject/modules/module3/main8.bal",
  "description": "",
  "items": [
    {
      "label": "xmlns",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "xmlns",
      "insertText": "xmlns \"${1}\" as ${2:ns};",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xmlns",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "xmlns",
      "insertText": "xmlns ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "var",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "var",
      "insertText": "var ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "wait",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "wait",
      "insertText": "wait ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "start",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "start",
      "insertText": "start ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "flush",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "flush",
      "insertText": "flush ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "isolated",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "isolated",
      "insertText": "isolated ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transactional",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "transactional",
      "insertText": "transactional",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "checkpanic",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "checkpanic",
      "insertText": "checkpanic ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "check",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "check",
      "insertText": "check ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "final",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "final",
      "insertText": "final ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "fail",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "fail",
      "insertText": "fail ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "from",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "from",
      "insertText": "from ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "if",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "if",
      "insertText": "if ${1:true} {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "while",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "while",
      "insertText": "while ${1:true} {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "do",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "do",
      "insertText": "do {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "lock",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "lock",
      "insertText": "lock {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "foreach",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "foreach",
      "insertText": "foreach ${1:var} ${2:item} in ${3:itemList} {\n\t${4}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "foreach i",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "foreach",
      "insertText": "foreach ${1:int} ${2:i} in ${3:0}...${4:9} {\n\t${5}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "fork",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "fork",
      "insertText": "fork {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transaction",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "transaction",
      "insertText": "transaction {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "retry",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "retry",
      "insertText": "retry {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "retry transaction",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "retry_transaction",
      "insertText": "retry transaction {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "match",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "match",
      "insertText": "match ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "panic",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "panic",
      "insertText": "panic ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stream<> streamName = new;",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "stream",
      "insertText": "stream<${1}> ${2:streamName} = new;",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "return;",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "P",
      "filterText": "return;",
      "insertText": "return;",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "StrandData",
      "kind": "Struct",
      "detail": "Record",
      "documentation": {
        "left": "Describes Strand execution details for the runtime.\n"
      },
      "sortText": "M",
      "insertText": "StrandData",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Thread",
      "kind": "TypeParameter",
      "detail": "Union",
      "sortText": "N",
      "insertText": "Thread",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "record",
      "insertText": "record ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "function",
      "insertText": "function ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record {}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "record",
      "insertText": "record {${1}}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record {||}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "record",
      "insertText": "record {|${1}|}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "distinct",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "distinct",
      "insertText": "distinct",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object constructor",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "object",
      "insertText": "object {${1}}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "true",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "true",
      "insertText": "true",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "false",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "false",
      "insertText": "false",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "O",
      "filterText": "module1",
      "insertText": "module1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "map",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "map",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "object",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stream",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "stream",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "table",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "table",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transaction",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "transaction",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "lsproject.hierarchy.module4",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "module4",
      "insertText": "module4",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import lsproject.hierarchy.module4;\n"
        }
      ]
    },
    {
      "label": "lsproject.module2",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "module2",
      "insertText": "module2",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import lsproject.module2;\n"
        }
      ]
    },
    {
      "label": "lsproject.module1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "module1",
      "insertText": "module11",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import lsproject.module1 as module11;\n"
        }
      ]
    },
    {
      "label": "testFunction()",
      "kind": "Function",
      "detail": "()",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerinals/lsproject.module3:0.1.0_  \n  \n  \n"
        }
      },
      "sortText": "C",
      "filterText": "testFunction",
      "insertText": "testFunction()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "testFunction4()",
      "kind": "Function",
      "detail": "()",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerinals/lsproject.module3:0.1.0_  \n  \n  \n"
        }
      },
      "sortText": "C",
      "filterText": "testFunction4",
      "insertText": "testFunction4()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "testImports()",
      "kind": "Function",
      "detail": "()",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerinals/lsproject.module3:0.1.0_  \n  \n  \n"
        }
      },
      "sortText": "C",
      "filterText": "testImports",
      "insertText": "testImports()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "worker",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "worker",
      "insertText": "worker ${1:name} {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "new",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "new",
      "insertText": "new ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "let",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "let",
      "insertText": "let",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "typeof",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "typeof",
      "insertText": "typeof ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "trap",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "trap",
      "insertText": "trap",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "client",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "client",
      "insertText": "client ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "error constructor",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "error",
      "insertText": "error(\"${1}\")",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "base16",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "base16",
      "insertText": "base16 `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "base64",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "base64",
      "insertText": "base64 `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object {}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "P",
      "filterText": "object",
      "insertText": "object {${1}}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "test/project2",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "project2",
      "insertText": "project2",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import test/project2;\n"
        }
      ]
    },
    {
      "label": "test/project1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "project1",
      "insertText": "project1",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import test/project1;\n"
        }
      ]
    },
    {
      "label": "test/local_project2",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "local_project2",
      "insertText": "local_project2",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import test/local_project2;\n"
        }
      ]
    },
    {
      "label": "test/local_project1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "local_project1",
      "insertText": "local_project1",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import test/local_project1;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.runtime",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "runtime",
      "insertText": "runtime",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.runtime;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.value",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "value",
      "insertText": "value",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.value;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.array",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "array",
      "insertText": "array",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.array;\n"
        }
      ]
    },
    {
      "label": "ballerina/jballerina.java",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "java",
      "insertText": "java",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import ballerina/jballerina.java;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.test",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "test",
      "insertText": "test",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.test;\n"
        }
      ]
    },
    {
      "label": "null",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "null",
      "insertText": "null",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ballerina/lang.regexp",
      "kind": "Module",
      "detail": "Module",
      "sortText": "R",
      "filterText": "regexp",
      "insertText": "regexp",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 3,
              "character": 0
            },
            "end": {
              "line": 3,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.regexp;\n"
        }
      ]
    },
    {
      "label": "readonly",
      "kind": "TypeParameter",
      "detail": "Readonly",
      "sortText": "N",
      "insertText": "readonly",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "handle",
      "kind": "TypeParameter",
      "detail": "Handle",
      "sortText": "N",
      "insertText": "handle",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "never",
      "kind": "TypeParameter",
      "detail": "Never",
      "sortText": "N",
      "insertText": "never",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "json",
      "kind": "TypeParameter",
      "detail": "Json",
      "sortText": "N",
      "insertText": "json",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "anydata",
      "kind": "TypeParameter",
      "detail": "Anydata",
      "sortText": "N",
      "insertText": "anydata",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "any",
      "kind": "TypeParameter",
      "detail": "Any",
      "sortText": "N",
      "insertText": "any",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "byte",
      "kind": "TypeParameter",
      "detail": "Byte",
      "sortText": "N",
      "insertText": "byte",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "service",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "Q",
      "filterText": "service",
      "insertText": "service",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "decimal",
      "kind": "TypeParameter",
      "detail": "Decimal",
      "sortText": "N",
      "insertText": "decimal",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "error",
      "kind": "Event",
      "detail": "Error",
      "sortText": "L",
      "insertText": "error",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xml",
      "kind": "TypeParameter",
      "detail": "Xml",
      "sortText": "N",
      "insertText": "xml",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "boolean",
      "kind": "TypeParameter",
      "detail": "Boolean",
      "sortText": "N",
      "insertText": "boolean",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "future",
      "kind": "TypeParameter",
      "detail": "Future",
      "sortText": "N",
      "insertText": "future",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "int",
      "kind": "TypeParameter",
      "detail": "Int",
      "sortText": "N",
      "insertText": "int",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "float",
      "kind": "TypeParameter",
      "detail": "Float",
      "sortText": "N",
      "insertText": "float",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "TypeParameter",
      "detail": "Function",
      "sortText": "N",
      "insertText": "function",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "string",
      "kind": "TypeParameter",
      "detail": "String",
      "sortText": "N",
      "insertText": "string",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "typedesc",
      "kind": "TypeParameter",
      "detail": "Typedesc",
      "sortText": "N",
      "insertText": "typedesc",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:AnnotationType",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "M",
      "insertText": "module1:AnnotationType",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TargetType",
      "kind": "TypeParameter",
      "detail": "Typedesc",
      "documentation": {
        "left": "The types of data values that are expected by the `client` to return after the data binding operation."
      },
      "sortText": "N",
      "insertText": "module1:TargetType",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:Client",
      "kind": "Interface",
      "detail": "Class",
      "documentation": {
        "left": "The HTTP client provides the capability for initiating contact with a remote HTTP service. The API it\nprovides includes functions for the standard HTTP methods, forwarding a received request and sending requests\nusing custom HTTP verbs."
      },
      "sortText": "K",
      "insertText": "module1:Client",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:GLOBAL_VAR",
      "kind": "Variable",
      "detail": "int",
      "sortText": "B",
      "insertText": "module1:GLOBAL_VAR",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:ENUM1_FIELD1",
      "kind": "EnumMember",
      "detail": "\"ENUM1_FIELD1\"",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": ""
        }
      },
      "sortText": "H",
      "insertText": "module1:ENUM1_FIELD1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TestClass1",
      "kind": "Interface",
      "detail": "Class",
      "sortText": "K",
      "insertText": "module1:TestClass1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TestMap3",
      "kind": "TypeParameter",
      "detail": "Map",
      "sortText": "N",
      "insertText": "module1:TestMap3",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TestMap2",
      "kind": "TypeParameter",
      "detail": "Map",
      "sortText": "N",
      "insertText": "module1:TestMap2",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TestObject1",
      "kind": "Interface",
      "detail": "Object",
      "sortText": "K",
      "insertText": "module1:TestObject1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:ErrorTwo",
      "kind": "Event",
      "detail": "Error",
      "sortText": "L",
      "insertText": "module1:ErrorTwo",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:ErrorOne",
      "kind": "Event",
      "detail": "Error",
      "sortText": "L",
      "insertText": "module1:ErrorOne",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:function4(int param1, int param2, string param3, float... param4)",
      "kind": "Function",
      "detail": "()",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerina/module1:0.1.0_  \n  \nThis is function4 with input parameters\n  \n**Params**  \n- `int` param1: param1 Parameter Description   \n- `int` param2: param2 Parameter Description  \n- `string` param3: param3 Parameter Description(Defaultable)  \n- `float[]` param4: param4 Parameter Description"
        }
      },
      "sortText": "C",
      "filterText": "module1_function4",
      "insertText": "module1:function4(${1})",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "module1:function3(int param1, int param2, float... param3)",
      "kind": "Function",
      "detail": "int",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerina/module1:0.1.0_  \n  \nThis is function3 with input parameters\n  \n**Params**  \n- `int` param1: param1 Parameter Description   \n- `int` param2: param2 Parameter Description  \n- `float[]` param3: param3 Parameter Description  \n  \n**Return** `int`   \n- Return Value Description  \n  \n"
        }
      },
      "sortText": "C",
      "filterText": "module1_function3",
      "insertText": "module1:function3(${1})",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "module1:function2()",
      "kind": "Function",
      "detail": "()",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerina/module1:0.1.0_  \n  \nThis is function2  \n"
        }
      },
      "sortText": "C",
      "filterText": "module1_function2",
      "insertText": "module1:function2()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:function1()",
      "kind": "Function",
      "detail": "()",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerina/module1:0.1.0_  \n  \n  \n"
        }
      },
      "sortText": "C",
      "filterText": "module1_function1",
      "insertText": "module1:function1()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:RequestMessage",
      "kind": "Enum",
      "detail": "Union",
      "documentation": {
        "left": "The types of messages that are accepted by HTTP `client` when sending out the outbound request."
      },
      "sortText": "I",
      "insertText": "module1:RequestMessage",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TEST_STRING_CONST1",
      "kind": "Variable",
      "detail": "\"HELLO WORLD\"",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": ""
        }
      },
      "sortText": "B",
      "insertText": "module1:TEST_STRING_CONST1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TEST_INT_CONST1",
      "kind": "Variable",
      "detail": "1",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": ""
        }
      },
      "sortText": "B",
      "insertText": "module1:TEST_INT_CONST1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TargetType2",
      "kind": "TypeParameter",
      "detail": "Typedesc",
      "documentation": {
        "left": "The super type of all the types."
      },
      "sortText": "N",
      "insertText": "module1:TargetType2",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TEST_FUTURE_INT",
      "kind": "Variable",
      "detail": "future<int>",
      "sortText": "B",
      "insertText": "module1:TEST_FUTURE_INT",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:ResponseMessage",
      "kind": "Enum",
      "detail": "Union",
      "documentation": {
        "left": "The types of messages that are accepted by HTTP `listener` when sending out the outbound response."
      },
      "sortText": "I",
      "insertText": "module1:ResponseMessage",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:listener1",
      "kind": "Variable",
      "detail": "module1:Listener",
      "sortText": "B",
      "insertText": "module1:listener1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TestEnum1",
      "kind": "Enum",
      "detail": "enum",
      "sortText": "I",
      "insertText": "module1:TestEnum1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:Response",
      "kind": "Interface",
      "detail": "Class",
      "documentation": {
        "left": "Represents a response.\n"
      },
      "sortText": "K",
      "insertText": "module1:Response",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TestRecord1",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "M",
      "insertText": "module1:TestRecord1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:TestRecord2",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "M",
      "insertText": "module1:TestRecord2",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:ClientError",
      "kind": "Event",
      "detail": "Error",
      "documentation": {
        "left": "Defines the possible client error types."
      },
      "sortText": "L",
      "insertText": "module1:ClientError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:Listener",
      "kind": "Interface",
      "detail": "Class",
      "sortText": "K",
      "insertText": "module1:Listener",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:Error",
      "kind": "Enum",
      "detail": "Union",
      "sortText": "I",
      "insertText": "module1:Error",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:Error2",
      "kind": "Enum",
      "detail": "Union",
      "sortText": "I",
      "insertText": "module1:Error2",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:Error1",
      "kind": "TypeParameter",
      "detail": "Union",
      "sortText": "N",
      "insertText": "module1:Error1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:E1",
      "kind": "Event",
      "detail": "Error",
      "sortText": "L",
      "insertText": "module1:E1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:E3",
      "kind": "Event",
      "detail": "Error",
      "sortText": "L",
      "insertText": "module1:E3",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1:E2",
      "kind": "Event",
      "detail": "Error",
      "sortText": "L",
      "insertText": "module1:E2",
      "insertTextFormat": "Snippet"
    }
  ]
}
