{
  "position": {
    "line": 10,
    "character": 36
  },
  "source": "expression_context/source/method_call_expression_ctx_source5.bal",
  "items": [
    {
      "label": "start",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "start",
      "insertText": "start ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "wait",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "wait",
      "insertText": "wait ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "flush",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "flush",
      "insertText": "flush ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "from clause",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "CR",
      "filterText": "from",
      "insertText": "from ${1:var} ${2:item} in ${3}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ballerina/lang.array",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "array",
      "insertText": "array",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.array;\n"
        }
      ]
    },
    {
      "label": "ballerina/jballerina.java",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "java",
      "insertText": "java",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import ballerina/jballerina.java;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.value",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "value",
      "insertText": "value",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.value;\n"
        }
      ]
    },
    {
      "label": "module1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CQ",
      "filterText": "module1",
      "insertText": "module1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ballerina/lang.runtime",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "runtime",
      "insertText": "runtime",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.runtime;\n"
        }
      ]
    },
    {
      "label": "map",
      "kind": "Unit",
      "detail": "type",
      "sortText": "CR",
      "insertText": "map",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object",
      "kind": "Unit",
      "detail": "type",
      "sortText": "CR",
      "insertText": "object",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stream",
      "kind": "Unit",
      "detail": "type",
      "sortText": "CR",
      "insertText": "stream",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "table",
      "kind": "Unit",
      "detail": "type",
      "sortText": "CR",
      "insertText": "table",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transaction",
      "kind": "Unit",
      "detail": "type",
      "sortText": "CR",
      "insertText": "transaction",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "service",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "service",
      "insertText": "service",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "new",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "new",
      "insertText": "new ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "isolated",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "isolated",
      "insertText": "isolated ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transactional",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "transactional",
      "insertText": "transactional",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "function",
      "insertText": "function ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "let",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "let",
      "insertText": "let",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "typeof",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "typeof",
      "insertText": "typeof ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "trap",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "trap",
      "insertText": "trap",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "client",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "client",
      "insertText": "client ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "true",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "true",
      "insertText": "true",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "false",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "false",
      "insertText": "false",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "check",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "check",
      "insertText": "check ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "checkpanic",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "checkpanic",
      "insertText": "checkpanic ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "is",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "is",
      "insertText": "is",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "error constructor",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "CR",
      "filterText": "error",
      "insertText": "error(\"${1}\")",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object constructor",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "CR",
      "filterText": "object",
      "insertText": "object {${1}}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "base16",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "CR",
      "filterText": "base16",
      "insertText": "base16 `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "base64",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "CR",
      "filterText": "base64",
      "insertText": "base64 `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "from",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "from",
      "insertText": "from ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Thread",
      "kind": "TypeParameter",
      "detail": "Union",
      "sortText": "CP",
      "insertText": "Thread",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "StrandData",
      "kind": "Struct",
      "detail": "Record",
      "documentation": {
        "left": "Describes Strand execution details for the runtime.\n"
      },
      "sortText": "CO",
      "insertText": "StrandData",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ballerina/lang.test",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "test",
      "insertText": "test1",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.test as test1;\n"
        }
      ]
    },
    {
      "label": "testFPointer",
      "kind": "Variable",
      "detail": "function (int) returns ()",
      "sortText": "CD",
      "insertText": "testFPointer",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "testInt",
      "kind": "Variable",
      "detail": "int",
      "sortText": "AD",
      "insertText": "testInt",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "arr",
      "kind": "Variable",
      "detail": "int[]",
      "sortText": "CD",
      "insertText": "arr",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "test()",
      "kind": "Function",
      "detail": "()",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _._  \n  \n  \n"
        }
      },
      "sortText": "CE",
      "filterText": "test",
      "insertText": "test()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TestClass",
      "kind": "Interface",
      "detail": "Class",
      "sortText": "CM",
      "insertText": "TestClass",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "utilizeInt(int hello)",
      "kind": "Function",
      "detail": "()",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _._  \n  \n  \n**Params**  \n- `int` hello"
        }
      },
      "sortText": "CE",
      "filterText": "utilizeInt",
      "insertText": "utilizeInt(${1})",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "cls",
      "kind": "Variable",
      "detail": "TestClass",
      "sortText": "CD",
      "insertText": "cls",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "null",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "CS",
      "filterText": "null",
      "insertText": "null",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "test/project2",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "project2",
      "insertText": "project2",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import test/project2;\n"
        }
      ]
    },
    {
      "label": "test/project1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "project1",
      "insertText": "project1",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import test/project1;\n"
        }
      ]
    },
    {
      "label": "test/local_project2",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "local_project2",
      "insertText": "local_project2",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import test/local_project2;\n"
        }
      ]
    },
    {
      "label": "test/local_project1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "local_project1",
      "insertText": "local_project1",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import test/local_project1;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.regexp",
      "kind": "Module",
      "detail": "Module",
      "sortText": "CR",
      "filterText": "regexp",
      "insertText": "regexp",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 0,
              "character": 0
            },
            "end": {
              "line": 0,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.regexp;\n"
        }
      ]
    },
    {
      "label": "re ``",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "CR",
      "filterText": "re ``",
      "insertText": "re `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "decimal",
      "kind": "TypeParameter",
      "detail": "Decimal",
      "sortText": "CP",
      "insertText": "decimal",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "error",
      "kind": "Event",
      "detail": "Error",
      "sortText": "CN",
      "insertText": "error",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xml",
      "kind": "TypeParameter",
      "detail": "Xml",
      "sortText": "CP",
      "insertText": "xml",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "boolean",
      "kind": "TypeParameter",
      "detail": "Boolean",
      "sortText": "CP",
      "insertText": "boolean",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "future",
      "kind": "TypeParameter",
      "detail": "Future",
      "sortText": "CP",
      "insertText": "future",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "int",
      "kind": "TypeParameter",
      "detail": "Int",
      "sortText": "CP",
      "insertText": "int",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "float",
      "kind": "TypeParameter",
      "detail": "Float",
      "sortText": "CP",
      "insertText": "float",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "TypeParameter",
      "detail": "Function",
      "sortText": "CP",
      "insertText": "function",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "string",
      "kind": "TypeParameter",
      "detail": "String",
      "sortText": "CP",
      "insertText": "string",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "typedesc",
      "kind": "TypeParameter",
      "detail": "Typedesc",
      "sortText": "CP",
      "insertText": "typedesc",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "readonly",
      "kind": "TypeParameter",
      "detail": "Readonly",
      "sortText": "CP",
      "insertText": "readonly",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "handle",
      "kind": "TypeParameter",
      "detail": "Handle",
      "sortText": "CP",
      "insertText": "handle",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "never",
      "kind": "TypeParameter",
      "detail": "Never",
      "sortText": "CP",
      "insertText": "never",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "json",
      "kind": "TypeParameter",
      "detail": "Json",
      "sortText": "CP",
      "insertText": "json",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "anydata",
      "kind": "TypeParameter",
      "detail": "Anydata",
      "sortText": "CP",
      "insertText": "anydata",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "any",
      "kind": "TypeParameter",
      "detail": "Any",
      "sortText": "CP",
      "insertText": "any",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "byte",
      "kind": "TypeParameter",
      "detail": "Byte",
      "sortText": "CP",
      "insertText": "byte",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "string ``",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "CR",
      "filterText": "string ``",
      "insertText": "string `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xml ``",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "CR",
      "filterText": "xml ``",
      "insertText": "xml `${1}`",
      "insertTextFormat": "Snippet"
    }
  ]
}
