/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */
 
//apply from: "$rootDir/gradle/javaProjectWithExtBala.gradle"
//apply from: "$rootDir/gradle/birTestableProject.gradle"
//apply from: "$rootDir/gradle/baseNativeStdLibProject.gradle"

apply from: "$rootDir/gradle/javaProject.gradle"
apply from: "$rootDir/gradle/ballerinaLangLibLoad.gradle"

dependencies {
    implementation 'org.slf4j:slf4j-api'
    implementation project(':ballerina-core')
    implementation project(':ballerina-lang')
    implementation project(':testerina:testerina-core')
    implementation project(':ballerina-cli')
//    implementation project(':ballerina-http')
    implementation project(':ballerina-lang:jballerina.java')
    implementation project(':ballerina-lang-test')
    implementation project(':ballerina-runtime')
    implementation project(':docerina')

    implementation 'com.h2database:h2'
    implementation 'org.testng:testng'
    testCompile 'org.awaitility:awaitility'
    testCompile 'com.zaxxer:HikariCP'
    testCompile 'org.slf4j:slf4j-jdk14'
    testCompile 'org.hsqldb:hsqldb'
    testCompile 'org.mockito:mockito-all'
    testCompile 'io.netty:netty-transport'
    testCompile 'io.netty:netty-codec'
    testCompile 'org.wso2.transport.http:org.wso2.transport.http.netty'
    testCompile 'org.wso2.carbon.messaging:org.wso2.carbon.messaging'
    testCompile 'org.testng:testng'
    testCompile project(path: ':ballerina-test-utils', configuration: 'shadow')
    testCompile project(':ballerina-runtime')
    testRuntime project(':ballerina-runtime')

    distributionBala project(path: ':testerina:testerina-core', configuration: 'distributionBala')
    distributionBala project(path: ':ballerina-observability', configuration: 'distributionBala')
    distributionBala project(path: ':ballerina-observability-internal', configuration: 'distributionBala')

//    balaTestImplementation project(path: ':ballerina-lang:annotations', configuration: 'balaImplementation')
////    balaTestImplementation project(path: ':ballerina-transactions', configuration: 'balaImplementation')
////    balaTestImplementation project(path: ':ballerina-http', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-log-api', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-file', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-auth', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-mime', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-cache', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-time', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-task', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-crypto', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-reflect', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-lang:jballerina.java', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-observability', configuration: 'balaImplementation')
//    balaTestImplementation project(path: ':ballerina-system', configuration: 'balaImplementation')
//    balaImplementation project(path: ':testerina:testerina-core', configuration: 'balaImplementation')
//    balaImplementation project(path: ':ballerina-lang-test', configuration: 'balaImplementation')
}

description = 'JBallerina - Unit Test Module'

//task createBre(type: org.gradle.api.tasks.Copy) {
//    from configurations.balRuntime
//    into "$buildDir/bre/lib"
//}

test {
    systemProperty "java.util.logging.config.file", "src/test/resources/logging.properties"
    systemProperty "enableJBallerinaTests", "true"

    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }

    afterSuite { suite, result ->
        result.exception?.printStackTrace()
    }

    testLogging {
        // this will only change --warn flag behaviour
        warn {
            events = ["failed", "skipped"]
            exceptionFormat "full"
        }
    }

//    dependsOn createBre
}

configurations {
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-simple'
    testCompile.exclude group: 'org.ops4j.pax.logging', module: 'pax-logging-api'
    testCompile.exclude group: 'org.codehaus.woodstox', module: 'woodstox-core-asl'
    testCompile.exclude group: 'org.codehaus.woodstox', module: 'stax2-api'
}

configurations.all {
    resolutionStrategy.preferProjectModules()
}
