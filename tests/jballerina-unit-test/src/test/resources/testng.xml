<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  ~
  -->

<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<suite name="ballerina-new-parser-test-suite" time-out="120000">
    <test name="jballerina-test" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <packages>
            <package name="org.ballerinalang.test.access.*"/>
            <package name="org.ballerinalang.test.action.*"/>
            <package name="org.ballerinalang.test.annotations.*"/>
            <package name="org.ballerinalang.test.bala.*"/>
            <package name="org.ballerinalang.test.bir.*"/>
            <package name="org.ballerinalang.test.cli.*"/>
            <package name="org.ballerinalang.test.closures.*"/>
            <package name="org.ballerinalang.test.dataflow.analysis.*"/>
            <package name="org.ballerinalang.test.documentation.*" />
            <package name="org.ballerinalang.test.endpoint.*" />
            <package name="org.ballerinalang.test.enums.*"/>
            <package name="org.ballerinalang.test.error.*"/>
            <package name="org.ballerinalang.test.execution.*" />

            <package name="org.ballerinalang.test.expressions.access.*" />
            <package name="org.ballerinalang.test.expressions.async.*" />
            <package name="org.ballerinalang.test.expressions.binaryoperations.*" />
            <package name="org.ballerinalang.test.expressions.builtinoperations.*" />
            <package name="org.ballerinalang.test.expressions.checkedexpr.*" />
            <package name="org.ballerinalang.test.expressions.checkpanicexpr.*" />
            <package name="org.ballerinalang.test.expressions.conversion.*" />
            <package name="org.ballerinalang.test.expressions.elvis.*" />
            <package name="org.ballerinalang.test.expressions.errorconstructorexpr.*" />
            <package name="org.ballerinalang.test.expressions.group.*" />
            <package name="org.ballerinalang.test.expressions.invocations.*" />
            <package name="org.ballerinalang.test.expressions.lambda.*" />
            <package name="org.ballerinalang.test.expressions.let.*" />
            <package name="org.ballerinalang.test.expressions.listconstructor.*" />
            <package name="org.ballerinalang.test.expressions.literals.*" />
            <package name="org.ballerinalang.test.expressions.mappingconstructor.*" />
            <package name="org.ballerinalang.test.expressions.object.*" />
            <package name="org.ballerinalang.test.expressions.rawtemplate.*" />
            <package name="org.ballerinalang.test.expressions.stamp.*" />
            <package name="org.ballerinalang.test.expressions.ternary.*" />
            <package name="org.ballerinalang.test.expressions.trap.*" />
            <package name="org.ballerinalang.test.expressions.typecast.*" />
            <package name="org.ballerinalang.test.expressions.typeof.*" />
            <package name="org.ballerinalang.test.expressions.unaryoperations.*" />
            <package name="org.ballerinalang.test.expressions.varref.*" />

            <package name="org.ballerinalang.test.functions.*"/>
            <package name="org.ballerinalang.test.identifiers.*"/>
            <package name="org.ballerinalang.test.imports.*"/>
            <package name="org.ballerinalang.test.isolation.*"/>
            <package name="org.ballerinalang.test.javainterop.*"/>
            <package name="org.ballerinalang.test.jvm.*"/>
            <package name="org.ballerinalang.test.klass.*"/>
            <!--            <package name="org.ballerinalang.test.loc.*"/>-->
            <package name="org.ballerinalang.test.lock.*"/>
            <package name="org.ballerinalang.test.main.function.*"/>
            <package name="org.ballerinalang.test.narrowing.*"/>
            <package name="org.ballerinalang.test.nativeimpl.functions.*"/>
            <package name="org.ballerinalang.test.natives.*"/>
            <package name="org.ballerinalang.test.object.*" />
            <package name="org.ballerinalang.test.packaging.*" />
            <package name="org.ballerinalang.test.query.*"/>

            <!--https://github.com/ballerina-platform/ballerina-lang/issues/30439-->
            <!-- package name="org.ballerinalang.test.parser.*"/>-->

            <package name="org.ballerinalang.test.reachability.*"/>
            <package name="org.ballerinalang.test.record.*"/>
            <package name="org.ballerinalang.test.runtime.api.*"/>

            <!--https://github.com/ballerina-platform/ballerina-lang/issues/30443-->
            <!--org.ballerinalang.test.serializer.json-->

            <package name="org.ballerinalang.test.services.*"/>

            <package name="org.ballerinalang.test.statements.arrays.*"/>
            <package name="org.ballerinalang.test.statements.assign.*"/>
            <package name="org.ballerinalang.test.statements.block.*"/>
            <package name="org.ballerinalang.test.statements.breakstatement.*"/>
            <package name="org.ballerinalang.test.statements.comment.*"/>
            <package name="org.ballerinalang.test.statements.compoundassignment.*"/>
            <package name="org.ballerinalang.test.statements.continuestatement.*"/>
            <package name="org.ballerinalang.test.statements.dostatement.*"/>
            <package name="org.ballerinalang.test.statements.expressionstmt.*"/>
            <package name="org.ballerinalang.test.statements.fail.*"/>
            <package name="org.ballerinalang.test.statements.ifelse.*"/>
            <package name="org.ballerinalang.test.statements.matchstmt.*"/>
            <package name="org.ballerinalang.test.statements.onfail.*"/>
            <package name="org.ballerinalang.test.statements.packageimport.*"/>
            <package name="org.ballerinalang.test.statements.retrystmt.*"/>
            <package name="org.ballerinalang.test.statements.returnstmt.*"/>
            <package name="org.ballerinalang.test.statements.vardeclr.*"/>
            <package name="org.ballerinalang.test.statements.variabledef.*"/>
            <package name="org.ballerinalang.test.statements.whilestatement.*"/>

            <package name="org.ballerinalang.test.strand.*"/>
            <package name="org.ballerinalang.test.structs.*"/>
            <package name="org.ballerinalang.test.testerina.*"/>
            <package name="org.ballerinalang.test.typedefs.*"/>
            <package name="org.ballerinalang.test.typechecker.*"/>

            <package name="org.ballerinalang.test.types.any.*"/>
            <package name="org.ballerinalang.test.types.anydata.*"/>
            <package name="org.ballerinalang.test.types.bytetype.*"/>
            <package name="org.ballerinalang.test.types.constant.*" />
            <package name="org.ballerinalang.test.types.decimaltype.*"/>
            <package name="org.ballerinalang.test.types.errors.*"/>
            <package name="org.ballerinalang.test.types.finaltypes.*"/>
            <package name="org.ballerinalang.test.types.finite.*"/>
            <package name="org.ballerinalang.test.types.floattype"/>
            <package name="org.ballerinalang.test.types.function.*"/>
            <package name="org.ballerinalang.test.types.future.*"/>
            <package name="org.ballerinalang.test.types.globalvar.*"/>
            <package name="org.ballerinalang.test.types.handle.*"/>
            <package name="org.ballerinalang.test.types.integer"/>
            <package name="org.ballerinalang.test.types.intersection.*"/>
            <package name="org.ballerinalang.test.types.json.*"/>
            <package name="org.ballerinalang.test.types.map.*"/>
            <package name="org.ballerinalang.test.types.never.*"/>
            <package name="org.ballerinalang.test.types.nullable.*"/>
            <package name="org.ballerinalang.test.types.nullvalue.*"/>
            <package name="org.ballerinalang.test.types.readonly.*"/>
            <package name="org.ballerinalang.test.types.stream.*"/>
            <package name="org.ballerinalang.test.types.string.*"/>
            <package name="org.ballerinalang.test.types.table.*"/>
            <package name="org.ballerinalang.test.types.tuples.*"/>
            <package name="org.ballerinalang.test.types.typedesc.*"/>
            <package name="org.ballerinalang.test.types.typereftype.*"/>
            <package name="org.ballerinalang.test.types.uniontypes.*"/>
            <package name="org.ballerinalang.test.types.var.*"/>
            <package name="org.ballerinalang.test.types.xml.*" />

            <package name="org.ballerinalang.test.variable.shadowing.*"/>
            <package name="org.ballerinalang.test.vm.*"/>
            <package name="org.ballerinalang.test.worker.*"/>
        </packages>

        <classes>
            <class name="org.ballerinalang.test.expressions.TemplateExpressionTest"/>

            <class name="org.ballerinalang.test.parser.ResilientParserTest"/>

            <class name="org.ballerinalang.test.types.TypeUnificationTest"/>

            <class name="org.ballerinalang.test.ParserTestRunner"/>
        </classes>
    </test>
</suite>
