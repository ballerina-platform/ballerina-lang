$lambda$_0 function(map<...>, int) -> int {
    %0(RETURN) int;
    %1(ARG) ...;
    %2(ARG) int;
    %3(LOCAL) int;
    %6(TEMP) int;
    %7(TEMP) boolean;
    %10(TEMP) [3];
    %12(TEMP) int;
    %14(TEMP) string;
    %16(TEMP) int;
    %19(LOCAL) string;
    %23(TEMP) string;

    bb0 {
        %3 = ConstLoad 34;
        %6 = ConstLoad 3;
        %7 = %2 == %6;
        %7? bb1 : bb2;
    }
    bb1 {
        %10 = <[3]> %2;
        %6 = <int> %10;
        %12 = %3 + %6;
        %14 = ConstLoad a;
        %6 = %1[%14];
        %16 = %12 + %6;
        %3 = %16 + globalA;
        GOTO bb2;
    }
    bb2 {
        %14 = ConstLoad l;
        %23 = %1[%14];
        %19 = s + %23;
        %14 = ConstLoad a;
        %12 = %1[%14];
        %0 = %3 + %12;
        GOTO bb4;
    }
    bb3 {
        GOTO bb4;
    }
    bb4 {
        return;
    }


}
