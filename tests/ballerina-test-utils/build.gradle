/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
 
apply from: "$rootDir/gradle/javaProject.gradle"
apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    implementation project(':ballerina-tools-api')
    implementation project(':ballerina-lang')
    implementation project(':ballerina-core')
    implementation project(':ballerina-runtime')
    implementation project(':ballerina-cli')
    implementation project(':identifier-util')

    implementation 'org.javassist:javassist'
    implementation 'io.netty:netty-codec-http'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.wso2.transport.http:org.wso2.transport.http.netty'
    implementation 'org.testng:testng'
    implementation 'org.apache.ws.commons.axiom:axiom-c14n'
}

configurations {
    commonBackend
}

jar {
    enabled = false
    dependsOn(shadowJar { classifier = null })
    manifest {
        attributes(
                'Implementation-Title': 'Ballerina - Test Utils',
                'Implementation-Version': version,
                'Premain-Class': 'org.ballerinalang.test.agent.BallerinaServerAgent'
        )
    }
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        exclude(dependency('org.slf4j:slf4j-api'))
        exclude(dependency('org.apache.commons:commons-lang3'))
        exclude(dependency('org.wso2.transport.http:org.wso2.transport.http.netty'))
        exclude(dependency('org.ops4j.pax.logging:pax-logging-api'))
        exclude(dependency('org.wso2.eclipse.osgi:org.eclipse.osgi'))
        exclude(dependency('org.wso2.eclipse.osgi:org.eclipse.osgi.services'))
        exclude(dependency('org.slf4j:slf4j-log4j12'))
        exclude(dependency('org.slf4j:slf4j-simple'))
        exclude(dependency('org.slf4j:slf4j-jdk14'))
        exclude(dependency('org.codehaus.woodstox:woodstox-core-asl'))
        exclude(dependency('org.codehaus.woodstox:stax2-api'))
        exclude(dependency('io.netty:netty-handler'))
        exclude(dependency('io.netty:netty-handler-proxy'))
        exclude(dependency('io.netty:netty-codec-socks'))
        exclude(dependency('io.netty:netty-codec-http2'))
        exclude(dependency('io.netty:netty-resolver'))
        exclude(dependency('commons-pool.wso2:commons-pool'))
        exclude(dependency('commons-pool:commons-pool'))
        exclude(dependency('org.wso2.orbit.org.yaml:snakeyaml'))
        exclude(dependency('org.bouncycastle:bcprov-jdk15on'))
        exclude(dependency('org.bouncycastle:bcpkix-jdk15on'))
        exclude(dependency('io.netty:netty-tcnative-boringssl-static'))
        exclude(dependency('org.testng:testng'))
        exclude(dependency('com.beust:jcommander'))
        exclude(dependency('io.netty:netty-transport-native-unix-common'))
        exclude(project(':ballerina-core'))
        exclude(project(':ballerina-lang'))
        exclude(project(':ballerina-runtime'))
        exclude('META-INF/*.SF')
        exclude('META-INF/*.DSA')
        exclude('META-INF/*.RSA')
    }
}

artifacts {
    commonBackend file: file('src/main/ballerina/httpService/common_backend.bal')
}

build.dependsOn shadowJar
