/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */
 
apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"
apply from: "$rootDir/gradle/birTestableProject.gradle"

configurations {
    balHome
    balRuntime
}

dependencies {
    implementation 'org.slf4j:slf4j-api'
    implementation project(':ballerina-core')
    implementation project(':ballerina-lang')
    testCompile project(':ballerina-lang:string')
    testCompile project(':ballerina-lang:value')
    testCompile project(':ballerina-lang:map')
    testCompile project(':ballerina-lang:error')

    implementation 'com.h2database:h2'
    implementation 'org.testng:testng'
    testCompile 'org.testng:testng'
    testCompile project(path: ':ballerina-test-utils', configuration: 'shadow')
    testCompile project(':ballerina-runtime')
    testRuntime project(path: ':jballerina-unit-test', configuration: 'testRuntime')


    birJar project(path: ':ballerina-lang:string', configuration: 'bStringBirJar')
    birJar project(path: ':ballerina-lang:value', configuration: 'bStringBirJar')
    birJar project(path: ':ballerina-lang:map', configuration: 'bStringBirJar')
    birJar project(path: ':ballerina-lang:error', configuration: 'bStringBirJar')
    
    baloImplementation project(path: ':ballerina-lang:annotations', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:array', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:decimal', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:error', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:floatingpoint', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:future', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:integer', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:object', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:stream', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:table', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:typedesc', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:xml', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:bool', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:internal', configuration: 'baloImplementation')
    
    balHome project(path: ':ballerina-lang:string', configuration: 'baloImplementation')
    balHome project(path: ':ballerina-lang:value', configuration: 'baloImplementation')
    balHome project(path: ':ballerina-lang:map', configuration: 'baloImplementation')
    balHome project(path: ':ballerina-lang:error', configuration: 'baloImplementation')
}

description = 'JBallerina - Unit Test Module'

task createBre(type: org.gradle.api.tasks.Copy) {
    from configurations.balRuntime
    into "$buildDir/bre/lib"
}

task createBstringBalHome(type: Copy) {
    dependsOn configurations.balHome
    from configurations.balHome
    into "$buildDir/ballerina-home/test/lib"
}

test {
    systemProperty "java.util.logging.config.file", "src/test/resources/logging.properties"
    systemProperty "java.util.logging.manager", "org.ballerinalang.logging.BLogManager"
    systemProperty "enableJBallerinaTests", "true"
    dependsOn createBstringBalHome

    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }

    afterSuite { suite, result ->
        result.exception?.printStackTrace()
    }

    testLogging {
        // this will only change --warn flag behaviour
        warn {
            events = ["failed", "skipped"]
            exceptionFormat "full"
        }
    }

    dependsOn createBre
}

configurations {
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-simple'
    testCompile.exclude group: 'org.ops4j.pax.logging', module: 'pax-logging-api'
}

configurations.all {
    resolutionStrategy.preferProjectModules()
}
