/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath("name.valery1707.kaitai:kaitai-gradle-plugin:${project.kaitaiGradlePluginVersion}")
    }
}

apply plugin: 'name.valery1707.kaitai'
apply from: "$rootDir/gradle/javaProject.gradle"
apply from: "$rootDir/gradle/ballerinaLangLibLoad.gradle"

dependencies {
    implementation project(':ballerina-core')
    implementation project(':ballerina-lang')

    implementation "io.kaitai:kaitai-struct-runtime:${project.kaitaiStructRuntimeVersion}"
    implementation "org.yaml:snakeyaml:${project.snakeyamlVersion}"
    implementation 'com.github.jknack:handlebars'

    testCompile 'org.testng:testng'
    testCompile project(':ballerina-test-utils')
}

kaitai {
    packageName = 'org.ballerinalang.build.kaitai'
    cacheDir = new File("${project.gradle.gradleUserHomeDir}/kaitai-cache")
    executionTimeout = 10_000
    version = "${project.kaitaiStructCompilerVersion}"
    url = new URL("https://github.com/kaitai-io/kaitai_struct_compiler/releases/download/"+
            "${project.kaitaiStructCompilerVersion}"+"/kaitai-struct-compiler-" +
            "${project.kaitaiStructCompilerVersion}"+".zip")
}

sourceSets.main.java.srcDirs += 'build/generated/kaitai'
checkstyleMain.exclude '**/kaitai/**'

task genBirSpec(type: JavaExec) {
    dependsOn classes
    classpath += sourceSets.main.runtimeClasspath
    main = 'org.ballerinalang.birspec.BIRSpecGenerator'

    inputs.dir('src/main/resources')
    outputs.files('../compiler/bir-spec.md')
    outputs.cacheIf { true }
}

build {
    dependsOn genBirSpec
}

compileJava {
    dependsOn 'kaitai'
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
    }
}

configurations {
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-simple'
    testCompile.exclude group: 'org.ops4j.pax.logging', module: 'pax-logging-api'
}
