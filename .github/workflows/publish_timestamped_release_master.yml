name: Publish Timestamped Snapshot Artifacts

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  publish-ballerina-lang:
    name: Build and Publish Ballerina Lang
    runs-on: ubuntu-latest
    timeout-minutes: 120
    if: github.repository_owner == 'ballerina-platform'
    steps:
      -   name: Checkout Repository
          uses: actions/checkout@v2

      -   name: Set up JDK 11
          uses: actions/setup-java@v2
          with:
            distribution: 'adopt'
            java-version: '11'

      -   name: Initialize Sub Modules
          run: git submodule update --init

      -   name: Change to Timestamped Version
          run: |
            startTime=$(TZ="Asia/Kolkata" date +'%Y%m%d-%H%M00')
            latestCommit=$(git log -n 1 --pretty=format:"%h")
            VERSION=$((grep -w 'version' | cut -d= -f2) < gradle.properties | rev | cut --complement -d- -f1 | rev)
            updatedVersion=$VERSION-$startTime-$latestCommit
            echo $updatedVersion
            echo TIMESTAMPED_VERSION=$updatedVersion >> $GITHUB_ENV
            sed -i "s/version=\(.*\)/version=$updatedVersion/g" gradle.properties

      -   name: Build and Publish
          env:
            publishUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
            publishPAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
          run: |
            ./gradlew clean build -x createJavadoc --scan --continue --rerun-tasks
            ./gradlew publish
            ./gradlew createCodeCoverageReport
            curl -X POST \
            'https://api.github.com/repos/ballerina-platform/ballerina-release/dispatches' \
            -H 'Accept: application/vnd.github.v3+json' \
            -H 'Authorization: Bearer ${{ secrets.BALLERINA_BOT_TOKEN }}' \
            --data "{
              \"event_type\": \"update_timestamped_version\",
              \"client_payload\": {
                \"branch\": \"master\",
                \"timestamped_version\": \"${TIMESTAMPED_VERSION}\"
              }
            }"

      -   name: Generate Codecov Report
          uses: codecov/codecov-action@v1
          with:
            files: ./.jacoco/reports/jacoco/report.xml

  sonarcloud_scan:
    name: Build with sonarcloud scan on Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 120
    concurrency: 
      group: ${{ github.head_ref }}-ubuntu
      cancel-in-progress: true

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt' 
          java-version: '11'

      - name: Initialize sub-modules
        run: git submodule update --init

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ github.sha }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Create missing module folders
        run: |
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/ballerina-formatter 
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/ballerina
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/ballerina-langlib
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/compiler-plugins
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/composer
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/debug-adapter
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/distribution/zip/nballerina-tools
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/formatter 
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/ls-extensions
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/project-api-test-artifact
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/language-server/modules/test-coverage
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/misc/testerina/modules/report-tools
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/misc/ballerina-config-schema-builder
          mkdir -p /home/runner/work/ballerina-lang/ballerina-lang/ballerina-stringutils
      - name: Build with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: "${{ env.SONAR_TOKEN != '' }}"
        run: |
          export DISPLAY=':99.0'
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          ./gradlew build sonarqube --info -x test -x check --max-workers=2 --scan --no-daemon
          find ~/.gradle/caches/ -name "*.lock" -type f -delete
        
      - name: Print log message  
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: "${{ env.SONAR_TOKEN == '' }}"
        run: echo "Sonarcloud scan is skipped"
