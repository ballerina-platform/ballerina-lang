/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply from: "$rootDir/gradle/balNativeLibProject.gradle"
apply from: "$rootDir/gradle/baseNativeStdLibProject.gradle"

dependencies {
    baloCreat project(':lib-creator')

    implementation project(':ballerina-lang')
    implementation project(':ballerina-lang:annotations')
    implementation project(':ballerina-auth')
    implementation project(':ballerina-cache')
    implementation project(':ballerina-log-api')
    implementation project(':ballerina-runtime-api')
    implementation project(':ballerina-time')
    implementation project(':ballerina-crypto')
    implementation project(':ballerina-encoding')
    implementation project(':ballerina-io')
    implementation project(':ballerina-stringutils')
    implementation project(':ballerina-http')

    baloImplementation project(path: ':ballerina-lang:annotations', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-auth', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-cache', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-log-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-runtime-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-time', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-crypto', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-encoding', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-stringutils', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-java', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-http', configuration: 'baloImplementation')

    testCompile 'org.slf4j:slf4j-simple'
    testCompile 'org.testng:testng'
    testCompile project(path: ':ballerina-test-utils', configuration: 'shadow')
    testCompile project(path: ':ballerina-test-common', configuration: 'tests')
    testCompile project(':ballerina-lang:annotations')
    testCompile project(':ballerina-config')
    testCompile project(':ballerina-core')
    testCompile project(':ballerina-system')
    testCompile project(':ballerina-runtime-api')
    testCompile project(':ballerina-task')
    testCompile project(':ballerina-time')
    testCompile project(':ballerina-reflect')
    testCompile project(':ballerina-crypto')
    testCompile project(':ballerina-cache')
    testCompile project(':ballerina-core')
    testCompile project(':ballerina-file')

    //transitive
    baloImplementation project(path: ':ballerina-config-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-system', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-task', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-mime', configuration: 'baloImplementation')

    interopImports project(':ballerina-config-api')
    interopImports project(':ballerina-encoding')
    interopImports project(':ballerina-io')
    interopImports project(':ballerina-log-api')
    interopImports project(':ballerina-system')
    interopImports project(':ballerina-task')
    interopImports project(':ballerina-time')
    interopImports project(':ballerina-crypto')
    interopImports project(':ballerina-runtime-api')
}

configurations.all {
    resolutionStrategy.preferProjectModules()
}

configurations.testCompileClasspath {
    resolutionStrategy {
        preferProjectModules()
    }
}

configurations {
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-simple'
    testCompile.exclude group: 'org.ops4j.pax.logging', module: 'pax-logging-api'
}

createBalo {
    jvmTarget = 'true'
}

description = 'Ballerina - JWT'
