[
  {
    "description": "A record representing marks received for humanities subjects.",
    "code": "type Humanities record {| int history; int geography;|};"
  },
  {
    "description": "Declare a `map` constrained by the type `string`.",
    "code": "map<string> m = {}; string city = \"Colombo\"; string country = \"Sri Lanka\"; string codeLiteral = \"code\";"
  },
  {
    "description": "Declare and initialize a `map` with a mapping constructor.",
    "code": "map<string> addrMap = {line1: \"No. 20\", line2: \"Palm Grove\", city: \"Colombo 03\", country,  [codeLiteral]: \"00300\" };"
  },
  {
    "description": "Declare and initialize a `map` with a mapping constructor - get value.",
    "code": "addrMap; ",
    "expr": "{\"line1\":\"No. 20\",\"line2\":\"Palm Grove\",\"city\":\"Colombo 03\",\"country\":\"Sri Lanka\",\"code\":\"00300\"}"
  },
  {
    "description": "Member access can be used to retrieve a value from a map.",
    "code": "string? countryValue = addrMap[\"country\"];"
  },
  {
    "description": "Member access can be used to retrieve a value from a map - get value.",
    "code": "countryValue",
    "expr": "\"Sri Lanka\""
  },
  {
    "description": "Retrieve a value using the `.get()` method.",
    "code": "addrMap.get(\"line2\");",
    "expr": "\"Palm Grove\""
  },
  {
    "description": "The `.hasKey()` function checks if a map contains the specified key.",
    "code": "addrMap.hasKey(\"postalCode\");",
    "expr": "false"
  },
  {
    "description": "Member access expressions can be used on the left hand side of an assignment.",
    "code": "addrMap[\"postalCode\"] = \"00300\";"
  },
  {
    "description": "Member access expressions can be used on the left hand side of an assignment - get value.",
    "code": "addrMap",
    "expr": "{\"line1\":\"No. 20\",\"line2\":\"Palm Grove\",\"city\":\"Colombo 03\",\"country\":\"Sri Lanka\",\"code\":\"00300\",\"postalCode\":\"00300\"}"
  },
  {
    "description": "The `.keys()` method returns the keys of the map as an array.",
    "code": "addrMap.keys()",
    "expr": "[\"line1\",\"line2\",\"city\",\"country\",\"code\",\"postalCode\"]"
  },
  {
    "description": "The number of fields in the map.",
    "code": "addrMap.length()",
    "expr": "6"
  },
  {
    "description": "Fields can be removed using the `.remove()` method.",
    "code": "addrMap.remove(\"code\");",
    "expr": "\"00300\""
  },
  {
    "description": "Maps support functional iteration.",
    "code": "addrMap",
    "expr": "{\"line1\":\"No. 20\",\"line2\":\"Palm Grove\",\"city\":\"Colombo 03\",\"country\":\"Sri Lanka\",\"postalCode\":\"00300\"}"
  },
  {
    "description": "Create a record value of type `Humanities`.",
    "code": "Humanities humanitiesMarks = {history: 80, geography: 75};"
  },
  {
    "description": "A mapping constructor expression can also include a spread field.",
    "code": "map<int> allMarks = {physics: 100, ...humanitiesMarks, chemistry: 75};"
  },
  {
    "description": "A mapping constructor expression can also include a spread field - get value.",
    "code": "allMarks",
    "expr": "{\"physics\":100,\"history\":80,\"geography\":75,\"chemistry\":75}"
  },
  {
    "description": "Exit terminal.",
    "code": "/exit"
  }
]
