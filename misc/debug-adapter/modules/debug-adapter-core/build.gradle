apply from: "$rootDir/gradle/javaProjectWithExtBala.gradle"

repositories {
    mavenCentral()
}

configurations {
    dist {
        transitive false
    }
    dependency {
        transitive false
    }
    libs
}

dependencies {
    implementation project(':ballerina-lang')
    implementation project(':ballerina-parser')
    implementation project(':ballerina-tools-api')
    implementation project(':ballerina-runtime')
    implementation project(':identifier-util')
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j.debug:0.12.0'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:0.12.0'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc.debug:0.12.0'
    implementation 'com.github.zafarkhaja:java-semver:0.9.0'
    implementation "commons-io:commons-io:${project.commonsIoVersion}"
    implementation 'org.apache.commons:commons-lang3'

    dependency 'org.eclipse.lsp4j:org.eclipse.lsp4j.debug:0.12.0'
    dependency 'org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:0.12.0'
    dependency 'org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc.debug:0.12.0'
    dependency 'com.github.zafarkhaja:java-semver:0.9.0'
    dependency 'commons-io:commons-io:2.7'
}

tasks.register('createZip', Zip) {
    dependsOn createBalHome
}

artifacts {
    dist file: file(createZip.archiveFile), builtBy: createZip
    libs configurations.dependency.files
}

compileJava {
    doFirst {
        options.compilerArgs << '--module-path' << classpath.asPath
        classpath = files()
    }
}

javadoc {
    doFirst {
        options.modulePath = classpath.toList()
        classpath = files()
    }
}

test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

description = 'Ballerina - Debug Adapter - Debug Adaptor Core'

ext.moduleName = 'ballerina.debug.adapter.core'
