apply from: "$rootDir/gradle/javaProjectWithExtBala.gradle"
apply from: "$rootDir/gradle/baseNativeStdLibProject.gradle"
apply from: "$rootDir/gradle/ballerinaLangLibLoad.gradle"

//apply plugin: 'jacoco'

configurations {
    dist {
        transitive false
    }
    dependency {
        transitive false
    }
    libs
}

repositories {
    jcenter()
}

dependencies {
    implementation project(':ballerina-tools-api')
    implementation project(':ballerina-lang')
    implementation project(':ballerina-parser')
    implementation project(':ballerina-runtime')
    implementation project(':language-server:language-server-commons')
    implementation project(':language-server:language-server-core')
    implementation project(':language-server:language-server-cli')
    implementation 'org.apache.commons:commons-lang3'

    implementation project(':testerina:testerina-core')
    implementation project(':ballerina-cli')

    implementation(group: 'org.eclipse.lsp4j', name: 'org.eclipse.lsp4j', version: "${project.eclipseLsp4jVersion}")

    compile 'com.fasterxml.jackson.core:jackson-databind:"${project.jacksonCoreVersion}"'

    testCompile 'org.testng:testng'

    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: "${project.eclipseJettyServerVersion}"
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: "${project.eclipseJettyServletVersion}"
}

test {
    dependsOn loadDistributionCache
    systemProperty "ballerina.home", "$buildDir/"
    systemProperty "experimental", "true"
    systemProperty "ballerina.version", project.version
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

CopySpec copyJarSpec = copySpec {
    from configurations.dependency
    into("lib")
}

task createZip(type: Zip) {
    dependsOn createBalHome
    with copyJarSpec
}

task buildAndCopy(type: Copy) {
    dependsOn build
    from 'build/libs/ballerinalang-data-mapper-' + project.version + '.jar'
    into  project(':jballerina-tools').projectDir.absolutePath +
            '/build/extracted-distributions/jballerina-tools-' + project.version +
            '/bre/lib'
}

jacocoTestReport {
    reports {
        xml.enabled true // coveralls plugin depends on xml format report
        html.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/utils/**')
        }))
    }
}
