import org.apache.tools.ant.taskdefs.condition.Os

/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
 
apply from: "$rootDir/gradle/balNativeLibProject.gradle"
apply from: "$rootDir/gradle/baseNativeStdLibProject.gradle"

dependencies {
    baloCreat project(':lib-creator')
    implementation project(':ballerina-core')
    implementation project(':testerina:testerina-runtime')
    implementation project(':ballerina-lang')
    implementation project(':ballerina-auth')
    implementation project(':ballerina-runtime')
    implementation project(':ballerina-lang:annotations')
    implementation project(':ballerina-config-api')
    implementation project(':ballerina-crypto')
    implementation project(':ballerina-jdbc')
    implementation project(':ballerina-email')
    implementation project(':ballerina-file')
    // implementation project(':ballerina-grpc')
    implementation project(':ballerina-http')
    implementation project(':ballerina-io')
    implementation project(':ballerina-log-api')
    implementation project(':ballerina-math')
    implementation project(':ballerina-mime')
    implementation project(':ballerina-reflect')
    implementation project(':ballerina-runtime-api')
    implementation project(':ballerina-system')
    implementation project(':ballerina-openapi')
    implementation project(':ballerina-task')
    implementation project(':ballerina-time')
    implementation project(':ballerina-transactions')
    // implementation project(':ballerina-websub')
    implementation project(':openapi-ballerina:openapi-to-ballerina-generator')
    implementation project(':ballerina-tool')
    implementation project(':ballerina-cache')
    implementation project(':ballerina-java')
    implementation 'info.picocli:picocli'
    implementation 'org.wso2.orbit.org.antlr:antlr4-runtime'
    implementation 'org.testng:testng'

    interopImports project(':ballerina-io')

    testCompile 'org.slf4j:slf4j-jdk14'
    testCompile 'io.swagger.core.v3:swagger-models'
    testCompile 'io.swagger.parser.v3:swagger-parser'
    testCompile 'com.github.jknack:handlebars'

    baloImplementation project(path: ':ballerina-lang:annotations', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-reflect', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-runtime-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-java', configuration: 'baloImplementation')

    interopImports project(':ballerina-reflect')
}

jar.archiveName("${project.name}-${project.version}.jar")

task updateVersion {
    ant.replaceregexp(
            file: "${projectDir}/src/main/ballerina/Ballerina.toml",
            match: "${project.name}-(.*).jar",
            replace: "${project.name}-${project.version}.jar"
    )
}
createBalo {
    dependsOn "updateVersion"
    jvmTarget = 'true'
}

description = 'Ballerina - Testerina - Core'
