/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id 'javaProject'
    id 'ballerinaLangLibLoad'
}

configurations {
    birJar
    bir
    birJarCompile { transitive false }
    testImplementation.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    testImplementation.exclude group: 'org.slf4j', module: 'slf4j-simple'
    testImplementation.exclude group: 'org.ops4j.pax.logging', module: 'pax-logging-api'
    distributionBala
}

dependencies {
    implementation project(':ballerina-runtime')
    implementation libs.tongfei.progressbar
    implementation libs.gson
    implementation libs.findbugs.jsr305
    implementation libs.zafarkhaja.jsemver
    implementation libs.commons.io
    implementation libs.squareup.okhttp
    implementation libs.squareup.okio

    testImplementation libs.squareup.mock.webserver
    testImplementation libs.mockito.core
    testImplementation libs.mockito.testng
    testImplementation libs.testng
    testImplementation libs.awaitility
}

tasks.register('createTestDistributionCache', Copy) {
    dependsOn configurations.distributionBala
    from configurations.distributionBala
    into "$buildDir/repo"
}

tasks.register('createBirCache') {
    dependsOn configurations.bir

    doLast {
        configurations.bir.each { artifact ->
            copy {
                from artifact
                into "$buildDir/bir-cache/"
            }
        }
    }

    inputs.files configurations.bir
    outputs.dir "$buildDir/bir-cache"
    outputs.cacheIf { false }
}

test {
    dependsOn createTestDistributionCache
    dependsOn createBirCache
    dependsOn configurations.birJar
    dependsOn configurations.birJarCompile

    systemProperty "ballerina.home", "$buildDir"
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

description = 'Ballerina - Central Client'


ext.moduleName = 'ballerina.central.client'

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs << '--module-path' << classpath.asPath
        classpath = files()
    }
}

javadoc {
    doFirst {
        options.modulePath = classpath.toList()
        classpath = files()
    }
}
