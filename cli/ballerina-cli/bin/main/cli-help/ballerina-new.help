NAME
       ballerina-new - Create a new Ballerina package

SYNOPSIS
       bal new <package-path> [-t |--template <template-name> ]


DESCRIPTION
       Creates the given path if it does not exist and initializes a Ballerina
       package in it. It generates the Ballerina.toml, main.bal, .gitignore and
       .devcontainer.json files inside the package directory. However, for
       existing paths, the main.bal file is only created if there are no
       other Ballerina source files (.bal) in the directory.

       This command also provides an option to generate files based on
       predefined templates.

       A Ballerina package is a collection of logically-related Ballerina
       modules that are versioned and shared as a single unit. All modules of
       the package share the same 'Ballerina.toml' file and 'target' directory.

       The package directory will have the structure below.
            .
            ├── Ballerina.toml
            ├── .devcontainer.json
            ├── .gitignore
            └── main.bal

       Any directory becomes a Ballerina package if that directory has a
       'Ballerina.toml' file. For library packages, it contains the organization
       name, package name, and the version. The package root directory is the
       default module directory.

       The 'modules' directory contains other non-default Ballerina modules. Use
       'bal add <module-name>' command to create modules.

       The 'target' directory is created during the build process. It is the
       output directory, which contains the build artifacts.

       A template can also be specified when creating a new package. If a
       template is not specified, this command creates a package with the
       default template.


OPTIONS
       -t <template-name>, --template <template-name>
           Create a package using a predefined template.

           There are three built-in templates named:
           1. `main`
           2. `service`
           3. `lib`

EXAMPLES
       Create a package with the 'main' function.
           $ bal new myPackage

       Initialize a package in the current directory.
           $ bal new .

       Create a package in the given path.
           $ bal new path/to/package

       Create a package with the 'main' function with tests.
           $ bal new -t main myApp

      Create a package with a Ballerina service template.
           $ bal new -t service myService

      Create a package with a Ballerina library template.
           $ bal new -t lib myLib
