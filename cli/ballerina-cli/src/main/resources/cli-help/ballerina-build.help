NAME
       ballerina-build - Compiles the current package

SYNOPSIS
       bal build [OPTIONS] [<package>|<source-file>]


DESCRIPTION
       Compile the current package and its dependencies to produce a
       standalone executable JAR (Java Archive) file.

       Build writes the resulting executable to the `target/bin` directory
       when compiling the current package.

       Build writes the resulting executable to the current directory
       when compiling a single '.bal' file. The generated executable is named
       after the source file.

       Note: Building individual '.bal' files of a package is not allowed.


OPTIONS
       --export-openapi
           Generate OpenAPI definitions for service declarations in the current
           package.

       --cloud <provider>
           Generate cloud artifacts: '--cloud=k8s' for Kubernetes
           and '--cloud=docker' for Docker.

       --list-conflicted-classes
           List the conflicting classes of conflicting JARs in the package.

       -o <output>, --output <output>
           Write the output to the given file. These options will only work
           for the single '.bal' file scenario.

       --observability-included
           Include the dependencies that are required to enable observability.

       --offline
           Proceed without accessing the network. Attempt to proceed with the
           previously downloaded dependencies in local caches, will fail
           otherwise.

       --sticky
       	   Attempt to stick to the dependency versions available in the
       	   'Dependencies.toml' file. If the file doesn't exist, this option is
       	   ignored.

       --target-dir <path>
           Target directory path.


EXAMPLES
       Build the current package. This will generate an 'app.jar' file in the
       'target/bin' directory.
           $ bal build

       Build a single '.bal' file. This will generate an 'app.jar' file in the
       current directory.
           $ bal build app.bal

       Build the 'app' package from a different directory.
           $ bal build <app-package-path>
