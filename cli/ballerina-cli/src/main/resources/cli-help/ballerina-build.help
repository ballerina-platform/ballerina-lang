NAME
       ballerina-build - Build the Ballerina package and generate an executable

SYNOPSIS
       bal build
       bal build <ballerina-file-path>
       bal build <ballerina-package-path>
       bal build [--target-dir] <target-directory-path>
       bal build [--offline] [--experimental] [-o | --output] <output-path> <ballerina-file-path>
       bal build [--offline] [--experimental] [--cloud] [--observability-included]
                 [--list-conflicted-classes] <ballerina-package-path>


DESCRIPTION
       Compile Ballerina sources and produce the executable JAR file. However,
       if the package does not contain an entry point, it will produce a non-executable
       JAR file, which can be used in another package/program.

       Building a Ballerina package creates the executable `.jar` file
       in the `<package-root>/target/bin` directory.

       Building a single Ballerina file will create an executable `.jar` file in the
       current directory. The name of the executable file will be
       `<ballerina-file-name>.jar`.


OPTIONS
       -o <output>, --output <output>
           Write the output to the given file. The provided output
           file name may or may not contain the ‘.jar’ extension. The -o flag will only work
           for single files.

       --offline
            Build offline using the local artifacts without downloading the latest artifacts of
            the dependencies from the remote repository (Ballerina Central).

       --experimental
           Enable experimental language features.

       --observability-included
           Include the dependencies and artifacts in the  executable JAR file(s) of a Ballerina
           program that are required to enable the observability functionalities on it.

       --cloud
           Enable cloud artifact generation for cloud providers: (`--cloud=k8s`)for Kubernetes
           and (`--cloud=docker`) for Docker.

       --list-conflicted-classes
       		List the conflicting classes of conflicting JARs in the project.

       --target-dir
           Target directory path.

       --export-openapi
           Generate openAPI contract files for all the services in the current package.

EXAMPLES
       Build the 'hello' package that has an entry point. This will generate a
        `hello.jar` file in the '<package-root>/target/bin' directory.
          $ bal build

       Compile a Ballerina source file and create an executable JAR.
          $ bal build hello.bal

       Build the 'hello' package from a different directory location.
          $ bal build `<hello-package-path>`
